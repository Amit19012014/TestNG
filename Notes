Day - 9
--------------

Example : Reverse a string

String s= "welcome"
reverse string = emoclew

StringBufffer a =new StringBuffer("welcome");
StringBuilder a =new StringBuilder("welcome");

=============================================
 Immutable =  we cannot change. ex = String is a mutable.
 mutable = we can change.ex = StringBuffer & StringBuilder is immutable

String comparison
------------------
1) == equals()
2) String s = "welcome"
String s = new String("welcome")


Day - 10
--------------

OOPs Concepts
===============

object oriented programming
----------------------------

Class
Object
Polymorphism
Encapsulation
Inheritance
Data Abstraction


Class -A class is a collection of attributes and behaviour.
Class is a blueprint.

Animal(class) --> Dog,Elephant,Horse etc..
Student(class) --> Kim,David, Scott etc
Organization(class) --> john ,smith, mary

Object - Object is an instance of a class.

Class
--------
1) Class is collection of variables and methods.
2) class is logical entity/blueprint,
3) will not occupy space and memory.

Syntax:
class Employee{
variables
methods
}

Object
--------
1) Object is an instance of a class.
2) Object will be created by using a class.
3) Object is a physical entity.
4) occupy space in memory
5) We can create multiple object for single class.

Employee emp1 = new Employee();
Employee emp2= new Employee();
Employee emp3= new Employee();


Day 11
-------

Methods
-------
Block or group of statements which will perform certain task.
We have to call the methods through object.

1)No params  || No return value
2)No Params  || Return Value
3)Take params|| No return value
4)Take params|| Return value

String s = new String("welcome")
int len = s.length() // 2)No Params  || Return Value

String sub = s.substring(2,5)


How many ways we can store the data into variables?
==================================================
1) using object reference variables
2) using methods
3) Using a constructor

Difference b/w method and constructor.

Methods
------------
Method:
1) Method name can be anything
2) Method may or may not return a value
3) If method is not returning any value then specify void
4) Method can take parameters/arguments
5) We have to invoke/call methods explicitly through object
6) used for specifying logic

Constructor
------------
1) Constructor name should be same as class name.
2) Constructor will never return a value (not even void)
3) We don't specify the void
4) Constructor can take parameters/arguments
5) Constructor automatically invoked at the time of object creation.
6) used for initializing the values of the variables.

Types of Constructor
-------------------
Default Constructor
parameterized Constructor